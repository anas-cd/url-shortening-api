{"version":3,"sources":["script.js","_global.js"],"names":["console","log","app","body","document","burger","querySelector","menue","cbtn","getElementsByClassName","url","urlbtn","form","LinkList","api_url","url_link","LinksHistory","LinkPast","global","init","arr","JSON","parse","localStorage","getItem","error","i","length","push","populate","MobMenue","classList","contains","remove","add","shortly","async","responce","fetch","data","json","result","original_link","full_short_link","setItem","stringify","div","createElement","aLink","aSLink","cpybtn","href","LinkNode","createTextNode","SLinkNode","cpybtntxt","appendChild","prepend","element","histcount","addEventListener","navigator","clipboard","writeText","innerHTML","setTimeout","link","value"],"mappings":"AAAAA,QAAAC,IAAA,kBAGA,IAAAC,IAAA,GCFA,MAAAC,KAAAC,SAAAD,KACAE,OAAAD,SAAAE,cAAA,gBACAC,MAAAH,SAAAE,cAAA,WACAE,KAAAJ,SAAAK,uBAAA,QACAC,IAAAN,SAAAE,cAAA,QACAK,OAAAP,SAAAE,cAAA,eACAM,KAAAR,SAAAE,cAAA,QACAO,SAAAT,SAAAE,cAAA,aAGAQ,QAAA,wCACA,IAAAC,SAGAC,aAAA,GACAC,SAAA,GAIAf,IAAAgB,OAAA,CACAC,KAAA,WACAnB,QAAAC,IAAA,iBAGA,IAAAmB,EAAA,GAEA,IACAA,EAAAC,KAAAC,MAAAC,aAAAC,QAAA,YACA,MAAAC,GACAzB,QAAAC,IAAAwB,GAGA,GAAAL,EAAA,CACApB,QAAAC,IAAA,mCAEA,IAAA,IAAAyB,EAAA,EAAAA,EAAAN,EAAAO,OAAAD,IAEAV,aAAAY,KAAAR,EAAAM,IAEAxB,IAAAgB,OAAAW,SAAAT,EAAAM,GAAA,GAAAN,EAAAM,GAAA,IAGA1B,QAAAC,IAAAmB,KAOAU,SAAA,WACA9B,QAAAC,IAAA,cAEAE,KAAA4B,UAAAC,SAAA,YACA7B,KAAA4B,UAAAE,OAAA,YAEA9B,KAAA4B,UAAAG,IAAA,aAIAC,QAAAC,eAAA1B,GACAV,QAAAC,IAAA,oBAEAc,SAAAD,QAAAJ,EAEA,MAAA2B,QAAAC,MAAAvB,UAEA,IAAAwB,QAAAF,EAAAG,OAEAxB,aAAAY,KAAA,CAAAW,EAAAE,OAAAC,cAAAH,EAAAE,OAAAE,kBAEA3C,QAAAC,IAAA,2BACAsB,aAAAqB,QAAA,UAAAvB,KAAAwB,UAAA7B,qBAGAd,IAAAgB,OAAAW,SAAAU,EAAAE,OAAAC,cAAAH,EAAAE,OAAAE,kBAKAd,SAAA,SAAAa,EAAAC,GAEA,IAAAG,EAAA1C,SAAA2C,cAAA,OACAC,EAAA5C,SAAA2C,cAAA,KACAE,EAAA7C,SAAA2C,cAAA,KACAG,EAAA9C,SAAA2C,cAAA,UAEAD,EAAAf,UAAAG,IAAA,eACAc,EAAAjB,UAAAG,IAAA,QACAe,EAAAlB,UAAAG,IAAA,SACAgB,EAAAnB,UAAAG,IAAA,QAEAc,EAAAG,KAAAT,EACAO,EAAAE,KAAAR,EAEA,IAAAS,EAAAhD,SAAAiD,eAAAX,GACAY,EAAAlD,SAAAiD,eAAAV,GACAY,EAAAnD,SAAAiD,eAAA,QAEAL,EAAAQ,YAAAJ,GACAH,EAAAO,YAAAF,GACAJ,EAAAM,YAAAD,GAEAT,EAAAU,YAAAR,GACAF,EAAAU,YAAAP,GACAH,EAAAU,YAAAN,GAEArC,SAAA4C,QAAAX,GAGA,IAAA,IAAApB,EAAA,EAAAA,EAAAlB,KAAAmB,OAAAD,IAAA,CAEA,MAAAgC,EAAAlD,KAAAkB,GACA,IAAAiC,EAAA3C,aAAAW,QAAAD,EAAA,GACAgC,EAAAE,iBAAA,SAAAxB,UAEAyB,UAAAC,UAAAC,UAAA/C,aAAA2C,GAAA,IAEAD,EAAAM,UAAA,UACAC,YAAA,KACAP,EAAAM,UAAA,SACA,WASA9D,IAAAgB,OAAAC,OAEAd,OAAAuD,iBAAA,SAAA,KAEA1D,IAAAgB,OAAAY,cAGAnB,OAAAiD,iBAAA,SAAA,KACA,IAAAM,EAAAxD,IAAAyD,MAEAD,GACAlE,QAAAC,IAAA,cAEAW,KAAAmB,UAAAC,SAAA,WAAApB,KAAAmB,UAAAE,OAAA,UAEA/B,IAAAgB,OAAAiB,QAAA+B,IAEAtD,KAAAmB,UAAAG,IAAA","file":"all.js","sourcesContent":["console.log(\"Load script.js\");\r\n\r\n// Instantiating the global app object\r\nvar app = {};","// doc elements\r\nconst body = document.body;\r\nconst burger = document.querySelector(\"#BurgerMenue\"); \r\nconst menue = document.querySelector(\"div.nlc\");\r\nconst cbtn = document.getElementsByClassName(\"copy\");\r\nconst url = document.querySelector(\"#url\");\r\nconst urlbtn = document.querySelector(\"form button\");\r\nconst form = document.querySelector(\"form\");\r\nconst LinkList = document.querySelector(\".LinkList\"); \r\n\r\n// api variables\r\nconst api_url = 'https://api.shrtco.de/v2/shorten?url='; \r\nlet url_link; \r\n\r\n// variables \r\nlet LinksHistory = [];\r\nlet LinkPast =[];\r\n\r\n\r\n// Global\r\napp.global = {\r\n    init: function(){ // Load all global functions here\r\n        console.log(\"app initiated\");\r\n\r\n        \r\n        let arr = [];\r\n\r\n        try {\r\n            arr = JSON.parse(localStorage.getItem(\"itemarr\"));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        \r\n        if (arr) {  \r\n            console.log(\"getting data from local storage\");\r\n\r\n            for (let i = 0; i < arr.length; i++) {\r\n\r\n                LinksHistory.push(arr[i]);\r\n    \r\n                app.global.populate(arr[i][0],arr[i][1]);\r\n                \r\n            }\r\n            console.log(arr);\r\n        }\r\n\r\n        \r\n\r\n        \r\n    },\r\n    MobMenue: function(){ // Some specific function\r\n        console.log(\"MobMenue()\");\r\n\r\n        if (body.classList.contains(\"MobMenue\") ){\r\n            body.classList.remove(\"MobMenue\");\r\n        } else {\r\n            body.classList.add(\"MobMenue\");\r\n        }\r\n         \r\n    },\r\n    shortly: async function (url) {\r\n        console.log(\"shortly accessed\");\r\n\r\n        url_link = api_url + url; \r\n\r\n        const responce = await fetch(url_link); \r\n\r\n        let data = await responce.json(); \r\n\r\n        LinksHistory.push([data.result.original_link,data.result.full_short_link]);\r\n\r\n        console.log(\"saving to local storage\");\r\n        localStorage.setItem(\"itemarr\", JSON.stringify(LinksHistory));\r\n\r\n\r\n        await app.global.populate(data.result.original_link,data.result.full_short_link);\r\n\r\n       \r\n        \r\n    },\r\n    populate: function (original_link,full_short_link) {\r\n\r\n        let div = document.createElement(\"div\");\r\n        let aLink = document.createElement(\"a\");\r\n        let aSLink = document.createElement(\"a\"); \r\n        let cpybtn = document.createElement(\"button\"); \r\n\r\n        div.classList.add(\"LinkElement\");\r\n        aLink.classList.add(\"link\"); \r\n        aSLink.classList.add(\"SLink\"); \r\n        cpybtn.classList.add(\"copy\"); \r\n\r\n        aLink.href = original_link; \r\n        aSLink.href = full_short_link;\r\n\r\n        let LinkNode = document.createTextNode(original_link);\r\n        let SLinkNode = document.createTextNode(full_short_link); \r\n        let cpybtntxt = document.createTextNode(\"Copy\");\r\n\r\n        aLink.appendChild(LinkNode);\r\n        aSLink.appendChild(SLinkNode);\r\n        cpybtn.appendChild(cpybtntxt); \r\n\r\n        div.appendChild(aLink);\r\n        div.appendChild(aSLink);\r\n        div.appendChild(cpybtn);\r\n\r\n        LinkList.prepend(div); \r\n\r\n        // updating event listeners for copy button \r\n        for (let i = 0; i < cbtn.length; i++) {\r\n        \r\n        const element = cbtn[i];\r\n        let histcount = LinksHistory.length - (i + 1); \r\n        element.addEventListener('click', async () => {\r\n\r\n            navigator.clipboard.writeText(LinksHistory[histcount][1]);\r\n\r\n            element.innerHTML = \"Copied!\";\r\n            setTimeout(() => {\r\n                element.innerHTML = \"Copy\";\r\n            }, 2000);\r\n        });\r\n            \r\n        }\r\n\r\n    }\r\n}\r\n\r\n// Run the global stuff\r\napp.global.init();\r\n\r\nburger.addEventListener('click', () => {\r\n\r\n    app.global.MobMenue()\r\n});\r\n\r\nurlbtn.addEventListener('click', () => {\r\n    let link = url.value;\r\n\r\n    if (link) {\r\n        console.log(\"link found\");\r\n\r\n        (form.classList.contains(\"nolink\"))? form.classList.remove(\"nolink\") : '';\r\n\r\n        app.global.shortly(link);\r\n\r\n    }else form.classList.add(\"nolink\");\r\n    \r\n});\r\n\r\n"]}